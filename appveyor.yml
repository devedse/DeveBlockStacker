# build variables
os: Visual Studio 2017
configuration: Release
platform: Any CPU
environment:
  LibraryVersion: 0.2.0
xamarin:
  email: 
    secure: +SUXZSPLHwp39+Yh09d2xxVGsEgHtlSD4NT1Og5h3sg=
  password:
    secure: Tvdf5rZl6IOCwZbvyj9B2w==
  android: true
  ios: true
  
# versioning
version: $(LibraryVersion).{build}
assembly_info:
  patch: true
  file: '**\AssemblyInfo.*'
  assembly_version: $(LibraryVersion).0
  assembly_file_version: '{version}'
  assembly_informational_version: '{version}-{branch}'

# packages
install:
  - cinst 7zip -x86
  - cinst 7zip.commandline -x86
  - cinst xamarin-component -version 1.1.0.7
  - ps: |
      $tempDir="$pwd\temp"
      $installerUrl="https://github.com/MonoGame/MonoGame/releases/download/v3.7/MonoGameSetup.exe"
      $installerFile="$tempDir\MonoGameSetup.zip"
      $installerExtracted="$tempDir\MonoGameSetup"
      $programFiles = "${env:ProgramFiles(x86)}\"
      
      Write-Host "Downloading MonoGame to $installerFile..."
      If ((Test-Path  $tempDir) -eq 0) {
          New-Item -ItemType Directory $tempDir
      }
      Invoke-WebRequest $installerUrl -OutFile $installerFile
      
      Write-Host "Extracting MonoGame to $installerExtracted..."
      7z x -y $installerFile -o"$installerExtracted"
      Write-Host "Copying the MonoGame content pipeline to $programFiles..."
      Copy-Item "$installerExtracted\`$PROGRAMFILES\MSBuild\MonoGame" "$programFiles\MSBuild" -Recurse 

# build
branches:
  only:
    - master
before_build:
  - if not exist output mkdir output
  - if not exist output\net4 mkdir output\net4
  - if not exist output\Portable mkdir output\Portable
  - dir
  - nuget restore DeveBlockStacker\DeveBlockStacker.sln
build: 
  project: DeveBlockStacker.sln 
  verbosity: normal
after_build:
  - ps: |
      $ErrorActionPreference = "Stop"
      
      $nugetVersion = "$env:APPVEYOR_BUILD_VERSION"
      
      Write-Host "Copying the output files..."
      copy DeveBlockStacker\Jitter\bin\net4\Release\Jitter.dll output\net4\
      copy DeveBlockStacker\Jitter\bin\net4\Release\Jitter.pdb output\net4\
      copy DeveBlockStacker\Jitter\bin\net4\Release\Jitter.xml output\net4\
      copy DeveBlockStacker\Jitter\bin\Portable\Release\Jitter.dll output\Portable\
      copy DeveBlockStacker\Jitter\bin\Portable\Release\Jitter.pdb output\Portable\
      copy DeveBlockStacker\Jitter\bin\Portable\Release\Jitter.xml output\Portable\
      
      Write-Host "Setting .nuspec version tag to $nugetVersion..."
      $content = (Get-Content nuget\Jitter.nuspec)
      $content = $content -replace '\$version\$', $nugetVersion
      $content | Out-File nuget\Jitter.nuspec
      nuget pack nuget\Jitter.nuspec -OutputDirectory output

      Write-Host "Setting component.yaml version tag to $nugetVersion..."
      $content = (Get-Content component\component.yaml)
      $content = $content -replace '\$version\$', $nugetVersion
      $content | Out-File component\component.yaml
      xamarin-component package ./component/
      mv component\*.xam output

test_script:
  - ps: |
      $ErrorActionPreference = "Stop"
      
      Write-Host "Building the samples..."
      
      nuget restore samples\JitterDemo\JitterDemo.sln 
      msbuild samples\JitterDemo\JitterDemo.sln /p:Configuration=$env:configuration /p:Platform="Any CPU"
      If ($LastExitCode -ne 0) {
        exit $LastExitCode
      }
      
      nuget restore samples\JitterOpenGLDemo\JitterOpenGLDemo.sln 
      msbuild samples\JitterOpenGLDemo\JitterOpenGLDemo.sln /p:Configuration=$env:configuration /p:Platform="Any CPU"
      If ($LastExitCode -ne 0) {
        exit $LastExitCode
      }
      
      nuget restore samples\JitterPhoneDemo\SimpleJitterPhoneDemo.sln 
      msbuild samples\JitterPhoneDemo\SimpleJitterPhoneDemo.sln /p:Configuration=$env:configuration /p:Platform="x86"
      If ($LastExitCode -ne 0) {
        exit $LastExitCode
      }
      
      nuget restore samples\JitterPortableSample\JitterSample.sln 
      msbuild samples\JitterPortableSample\JitterSample.sln /p:Configuration=$env:configuration /p:Platform="Any CPU"
      If ($LastExitCode -ne 0) {
        exit $LastExitCode
      }
      
# artifacts
artifacts: 
  - path: output\
    name: Jitter-$(APPVEYOR_BUILD_VERSION) 
    type: zip 
  - path: output\JitterPhysics*.nupkg
  - path: output\JitterPhysics*.xam
