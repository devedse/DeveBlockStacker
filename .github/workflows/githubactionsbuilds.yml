name: GitHubActionsBuilds

on: push

jobs:
  generate_version_number:
    runs-on: ubuntu-latest
    outputs:
      build_number: ${{ steps.buildnumber.outputs.build_number }}
    steps:
    - name: Generate build number
      id: buildnumber
      uses: einaregilsson/build-number@v3 
      with:
        token: ${{secrets.github_token}}

  intellicode:
    needs: generate_version_number
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0 # We need to fetch the entire Git history in order to verify the authenticity.
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: Build with dotnet
      run: dotnet build DeveBlockStacker.Core/DeveBlockStacker.Core.csproj -c Release /p:Version=1.0.${{needs.generate_version_number.outputs.build_number}} # Project needs to build before training a model.
    - name: Train Intellicode Model
      uses: microsoft/vs-intellicode@v1

  build_docker:
    needs: generate_version_number
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Run Build
      run: |
        docker build -f Dockerfile -t test123 .

  build_linux_DesktopGL:
    needs: generate_version_number
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: |
          3.1.x
          6.0.x
    - name: dotnet restore
      run: dotnet restore DeveBlockStacker.DesktopGL/DeveBlockStacker.DesktopGL.csproj
    - name: dotnet build
      run: dotnet build DeveBlockStacker.DesktopGL/DeveBlockStacker.DesktopGL.csproj -c Release --no-restore /p:Version=1.0.${{needs.generate_version_number.outputs.build_number}}
    - name: dotnet test
      run: dotnet test DeveBlockStacker.Core.Tests/DeveBlockStacker.Core.Tests.csproj -c Release --verbosity normal

  build_windows_DesktopGL:
    needs: generate_version_number
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: |
          3.1.x
          6.0.x
    - name: dotnet restore
      run: dotnet restore DeveBlockStacker.DesktopGL/DeveBlockStacker.DesktopGL.csproj
    - name: dotnet build
      run: dotnet build DeveBlockStacker.DesktopGL/DeveBlockStacker.DesktopGL.csproj -c Release --no-restore /p:Version=1.0.${{needs.generate_version_number.outputs.build_number}}
    - name: dotnet test
      run: dotnet test DeveBlockStacker.Core.Tests/DeveBlockStacker.Core.Tests.csproj -c Release --verbosity normal

  build_windows_WindowsDX:
    needs: generate_version_number
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: |
          3.1.x
          6.0.x
    - name: dotnet restore
      run: dotnet restore DeveBlockStacker.WindowsDX/DeveBlockStacker.WindowsDX.csproj
    - name: dotnet build
      run: dotnet build DeveBlockStacker.WindowsDX/DeveBlockStacker.WindowsDX.csproj -c Release --no-restore /p:Version=1.0.${{needs.generate_version_number.outputs.build_number}}
    - name: dotnet test
      run: dotnet test DeveBlockStacker.Core.Tests/DeveBlockStacker.Core.Tests.csproj -c Release --verbosity normal

  build_windows_Android:
    needs: generate_version_number
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: |
          3.1.x
          6.0.x
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1
    - name: dotnet restore
      run: |
        dotnet restore DeveBlockStacker.Android/DeveBlockStacker.Android.csproj
        dotnet restore DeveBlockStacker.Core/DeveBlockStacker.Core.csproj
    - name: dotnet build
      run: |
        #dotnet build DeveBlockStacker.Android/DeveBlockStacker.Android.csproj -c Release --no-restore /p:Version=1.0.${{needs.generate_version_number.outputs.build_number}}
        msbuild "/t:SignAndroidPackage" "/p:Configuration=Release" "/p:AndroidKeyStore=true" "/p:AndroidSigningKeyAlias=DevedseCert" "/p:AndroidSigningKeyPass=${{secrets.ANDROIDKEYSTOREPASSWORD}}" "/p:AndroidSigningKeyStore=DevedseCert.keystore" "/p:AndroidSigningStorePass=${{secrets.ANDROIDKEYSTOREPASSWORD}}" "DeveBlockStacker.Android\DeveBlockStacker.Android.csproj"
    - name: dotnet test
      run: dotnet test DeveBlockStacker.Core.Tests/DeveBlockStacker.Core.Tests.csproj -c Release --verbosity normal

  build_macos_Android:
    needs: generate_version_number
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: nuget/setup-nuget@v1
        with:
          nuget-version: 'latest'

      # - name: Setup Android signing
      #   run: (echo ${{ secrets.KEYSTORE }} | base64 --decode) > ./DeveBlockStacker.Android/keystore.jks
        
      - name: Set iOS version
        run: |
          /usr/libexec/PlistBuddy -c "Set :CFBundleShortVersionString 1.0.${{needs.generate_version_number.outputs.build_number}}" ./DeveBlockStacker.iOS/Info.plist
          /usr/libexec/PlistBuddy -c "Set :CFBundleVersion ${{needs.generate_version_number.outputs.build_number}}" ./DeveBlockStacker.iOS/Info.plist
      # - name: Set Android version
      #   uses: damienaicheh/update-android-version-manifest-action@v1.0.0
      #   with:
      #     android-manifest-path: ./DeveBlockStacker.Android/Properties/AndroidManifest.xml
      #     version-name: 1.0.${{needs.generate_version_number.outputs.build_number}}
      #     version-code: ${{needs.generate_version_number.outputs.build_number}}
      #     print-file: true

      - name: Restore NuGet packages
        run: nuget restore

      - name: Restore NuGet packages
        run: nuget restore DeveBlockStacker.sln
        
      - name: Build Android
        run: MSBuild /t:SignAndroidPackage /p:Configuration=Release /p:AndroidPackageFormat=apk /p:AndroidKeyStore=true /p:AndroidSigningKeyAlias=DevedseCert /p:AndroidSigningKeyPass=${{ secrets.ANDROIDKEYSTOREPASSWORD }} /p:AndroidSigningKeyStore=DevedseCert.keystore /p:AndroidSigningStorePass=${{ secrets.ANDROIDKEYSTOREPASSWORD }} ./DeveBlockStacker.Android/DeveBlockStacker.Android.csproj
    
      - name: Build iOS
        run: MSBuild /t:Build /p:Configuration=Release /p:Platform=iPhone /p:BuildIpa=true ./DeveBlockStacker.iOS/DeveBlockStacker.iOS.csproj    

  build_linux:
    needs: generate_version_number
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: dotnet restore
      run: dotnet restore DeveBlockStacker.sln
    - name: dotnet build
      run: dotnet build DeveBlockStacker.sln -c Release --no-restore /p:Version=1.0.${{needs.generate_version_number.outputs.build_number}}
    - name: dotnet test
      run: dotnet test DeveBlockStacker.sln -c Release --no-build --verbosity normal

  build_windows:
    needs: generate_version_number
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core @ Latest
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x     
    - uses: actions/setup-java@v1
      with:
        java-version: '15' # The JDK version to make available on the path.
        java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
        architecture: x64 # (x64 or x86) - defaults to x64
    - name: Install tools
      run: |
        dotnet tool install --global dotnet-sonarscanner
        dotnet tool install --global dotnet-reportgenerator-globaltool
    - name: dotnet restore
      run: dotnet restore DeveBlockStacker.sln
    - name: SonarQube begin
      run: dotnet-sonarscanner begin /k:"DeveBlockStacker" /o:"devedse-github" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.login=${{secrets.SONARQUBETOKEN}} /d:sonar.cs.opencover.reportsPaths=".\DeveBlockStacker.Tests\TestResults\Coverage\coverage.opencover.xml" /d:sonar.coverage.exclusions="DeveBlockStacker.ConsoleApp/**/*.cs,DeveBlockStacker.Tests/**/*.cs"
    - name: dotnet build
      run: dotnet build DeveBlockStacker.sln -c Release --no-restore /p:Version=1.0.${{needs.generate_version_number.outputs.build_number}}
    - name: dotnet test
      run: dotnet test DeveBlockStacker.sln --verbosity normal --no-build -c Release /p:CollectCoverage=true /p:CoverletOutputFormat=\`"cobertura,opencover\`" /p:CoverletOutput=./TestResults/Coverage/
    - name: SonarQube end
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: dotnet-sonarscanner end /d:sonar.login=${{secrets.SONARQUBETOKEN}}
    - name: Pack
      run: dotnet pack DeveBlockStacker\DeveBlockStacker.csproj --verbosity normal --no-build -c Release /p:Version=1.0.${{needs.generate_version_number.outputs.build_number}}
    - name: Run CodeCov #codecov -f ".\DeveBlockStacker.Tests\TestResults\Coverage\coverage.opencover.xml"
      uses: codecov/codecov-action@v2
      with:
        #token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
        files: .\DeveBlockStacker.Tests\TestResults\Coverage\coverage.opencover.xml # optional
        #flags: unittests # optional
        #name: codecov-umbrella # optional
        #fail_ci_if_error: true # optional (default = false)
        verbose: true # optional (default = false)

    - name: Run GoPackage.ps1 script
      run: .\Scripts\GoPackage.ps1
      shell: powershell
  

    - uses: actions/upload-artifact@v2
      with:
        name: DeveBlockStacker7z
        path: ./Scripts/Output/DeveBlockStacker.7z
    - uses: actions/upload-artifact@v2
      with:
        name: DeveBlockStackerZip
        path: ./Scripts/Output/DeveBlockStacker.zip
    - uses: actions/upload-artifact@v2
      with:
        name: DeveBlockStackerNuGet
        path: |
          ./DeveBlockStacker/bin/Release/*.nupkg
          ./DeveBlockStacker/bin/Release/*.snupkg

  release_github:
    needs: [generate_version_number, intellicode, build_windows, build_linux]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v2
      with:
        path: ./artifacts/

    - name: Display structure of downloaded files
      run: |
        cd ./artifacts/
        ls -R
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: 1.0.${{needs.generate_version_number.outputs.build_number}}
        release_name: 1.0.${{needs.generate_version_number.outputs.build_number}}
        body: |
          ${{ github.event.head_commit.message }}
        draft: false
        prerelease: false
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: 1.0.${{needs.generate_version_number.outputs.build_number}}
        files: |
          ./artifacts/DeveBlockStacker7z/DeveBlockStacker.7z
          ./artifacts/DeveBlockStackerZip/DeveBlockStacker.zip
          ./artifacts/DeveBlockStackerNuGet/*.nupkg
          ./artifacts/DeveBlockStackerNuGet/*.snupkg
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}