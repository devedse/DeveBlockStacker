name: GitHubActionsBuilds

on: push

jobs:
  generate_version_number:
    runs-on: ubuntu-latest
    outputs:
      build_number: ${{ steps.buildnumber.outputs.build_number }}
    steps:
    - name: Generate build number
      id: buildnumber
      uses: einaregilsson/build-number@v3 
      with:
        token: ${{secrets.github_token}}

  intellicode:
    needs: generate_version_number
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0 # We need to fetch the entire Git history in order to verify the authenticity.
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: Build with dotnet
      run: dotnet build DeveBlockStacker.Core/DeveBlockStacker.Core.csproj -c Release /p:Version=1.0.${{needs.generate_version_number.outputs.build_number}} # Project needs to build before training a model.
    - name: Train Intellicode Model
      uses: microsoft/vs-intellicode@v1

  build_docker:
    needs: generate_version_number
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Run Build
      run: |
        docker build -f Dockerfile -t test123 .

  build_docker_blazor:
    needs: generate_version_number
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: devedse
        password: ${{ secrets.DOCKERHUBTOKEN }}
    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v1
      with:
        image: tonistiigi/binfmt:latest
        platforms: all
    - name: Available platforms
      run: echo ${{ steps.qemu.outputs.platforms }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
    - name: Builder instance name
      run: echo ${{ steps.buildx.outputs.name }}
    - name: Available platforms
      run: echo ${{ steps.buildx.outputs.platforms }}
    - name: Run Buildx
      run: |
        export VERSION=1.0.${{needs.generate_version_number.outputs.build_number}}
        echo Version: $VERSION
        docker buildx build -f DeveBlockStacker.Blazor/Dockerfile --build-arg BUILD_VERSION=$VERSION --platform linux/arm64,linux/amd64 -t devedse/deveblockstackerblazor:${{needs.generate_version_number.outputs.build_number}} -t devedse/deveblockstackerblazor:latest --push .

  build_docker_webgl:
    needs: generate_version_number
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: devedse
        password: ${{ secrets.DOCKERHUBTOKEN }}
    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v1
      with:
        image: tonistiigi/binfmt:latest
        platforms: all
    - name: Available platforms
      run: echo ${{ steps.qemu.outputs.platforms }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
    - name: Builder instance name
      run: echo ${{ steps.buildx.outputs.name }}
    - name: Available platforms
      run: echo ${{ steps.buildx.outputs.platforms }}
    - name: Run Buildx
      run: |
        export VERSION=1.0.${{needs.generate_version_number.outputs.build_number}}
        echo Version: $VERSION
        docker buildx build -f DeveBlockStacker.WebGL/Dockerfile --build-arg BUILD_VERSION=$VERSION --platform linux/arm,linux/arm64,linux/amd64 -t devedse/deveblockstackerwebgl:${{needs.generate_version_number.outputs.build_number}} -t devedse/deveblockstackerwebgl:latest --push .

  build_linux:
    needs: generate_version_number
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: |
          3.1.x
          6.0.x
    - name: dotnet restore
      run: dotnet restore DeveBlockStacker.Core/DeveBlockStacker.Core.csproj
    - name: dotnet build
      run: dotnet build DeveBlockStacker.Core/DeveBlockStacker.Core.csproj -c Release --no-restore /p:Version=1.0.${{needs.generate_version_number.outputs.build_number}}
    - name: dotnet test
      run: dotnet test DeveBlockStacker.Core.Tests/DeveBlockStacker.Core.Tests.csproj -c Release --verbosity normal

  build_windows:
    needs: generate_version_number
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core @ Latest
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x     
    - uses: actions/setup-java@v1
      with:
        java-version: '15' # The JDK version to make available on the path.
        java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
        architecture: x64 # (x64 or x86) - defaults to x64
    - name: Install tools
      run: |
        dotnet tool install --global dotnet-sonarscanner
        dotnet tool install --global dotnet-reportgenerator-globaltool
    - name: dotnet restore
      run: dotnet restore DeveBlockStacker.Core/DeveBlockStacker.Core.csproj
    - name: SonarQube begin
      run: dotnet-sonarscanner begin /k:"DeveBlockStacker" /o:"devedse-github" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.login=${{secrets.SONARQUBETOKEN}} /d:sonar.cs.opencover.reportsPaths=".\DeveBlockStacker.Tests\TestResults\Coverage\coverage.opencover.xml" /d:sonar.coverage.exclusions="DeveBlockStacker.Tests/**/*.cs"
    - name: dotnet build
      run: dotnet build DeveBlockStacker.Core/DeveBlockStacker.Core.csproj -c Release --no-restore /p:Version=1.0.${{needs.generate_version_number.outputs.build_number}}
    - name: dotnet test
      run: dotnet test DeveBlockStacker.Core.Tests/DeveBlockStacker.Core.Tests.csproj --verbosity normal -c Release /p:CollectCoverage=true /p:CoverletOutputFormat=\`"cobertura,opencover\`" /p:CoverletOutput=./TestResults/Coverage/
    - name: SonarQube end
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: dotnet-sonarscanner end /d:sonar.login=${{secrets.SONARQUBETOKEN}}
    - name: Run CodeCov #codecov -f ".\DeveBlockStacker.Tests\TestResults\Coverage\coverage.opencover.xml"
      uses: codecov/codecov-action@v2
      with:
        #token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
        files: .\DeveBlockStacker.Tests\TestResults\Coverage\coverage.opencover.xml # optional
        #flags: unittests # optional
        #name: codecov-umbrella # optional
        #fail_ci_if_error: true # optional (default = false)
        verbose: true # optional (default = false)
    - uses: actions/upload-artifact@v2
      with:
        name: DeveBlockStacker_build_windows_Core
        path: ./DeveBlockStacker.Core/bin/Release/netstandard2.0/*

  release_github:
    needs: [generate_version_number, intellicode, build_windows, build_linux]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v2
      with:
        path: ./artifacts/

    - name: Display structure of downloaded files
      run: |
        cd ./artifacts/
        ls -R
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: 1.0.${{needs.generate_version_number.outputs.build_number}}
        release_name: 1.0.${{needs.generate_version_number.outputs.build_number}}
        body: |
          ${{ github.event.head_commit.message }}
        draft: false
        prerelease: false
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: 1.0.${{needs.generate_version_number.outputs.build_number}}
        files: |
          ./artifacts/DeveBlockStackerCore7z/DeveBlockStacker.Core.7z
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}






  build_linux_DesktopGL:
    needs: generate_version_number
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: |
          3.1.x
          6.0.x
    - name: dotnet restore
      run: dotnet restore DeveBlockStacker.DesktopGL/DeveBlockStacker.DesktopGL.csproj
    - name: dotnet build
      run: dotnet build DeveBlockStacker.DesktopGL/DeveBlockStacker.DesktopGL.csproj -c Release --no-restore /p:Version=1.0.${{needs.generate_version_number.outputs.build_number}}
    - name: dotnet test
      run: dotnet test DeveBlockStacker.Core.Tests/DeveBlockStacker.Core.Tests.csproj -c Release --verbosity normal

  build_windows_DesktopGL:
    needs: generate_version_number
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: |
          3.1.x
          6.0.x
    - name: dotnet restore
      run: dotnet restore DeveBlockStacker.DesktopGL/DeveBlockStacker.DesktopGL.csproj
    - name: dotnet build
      run: dotnet build DeveBlockStacker.DesktopGL/DeveBlockStacker.DesktopGL.csproj -c Release --no-restore /p:Version=1.0.${{needs.generate_version_number.outputs.build_number}}
    - name: dotnet test
      run: dotnet test DeveBlockStacker.Core.Tests/DeveBlockStacker.Core.Tests.csproj -c Release --verbosity normal

  build_windows_WindowsDX:
    needs: generate_version_number
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: |
          3.1.x
          6.0.x
    - name: dotnet restore
      run: dotnet restore DeveBlockStacker.WindowsDX/DeveBlockStacker.WindowsDX.csproj
    - name: dotnet build
      run: dotnet build DeveBlockStacker.WindowsDX/DeveBlockStacker.WindowsDX.csproj -c Release --no-restore /p:Version=1.0.${{needs.generate_version_number.outputs.build_number}}
    - name: dotnet test
      run: dotnet test DeveBlockStacker.Core.Tests/DeveBlockStacker.Core.Tests.csproj -c Release --verbosity normal

  build_windows_Android:
    needs: generate_version_number
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: |
          3.1.x
          6.0.x
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1
    - name: Set Android version
      uses: damienaicheh/update-android-version-manifest-action@v1.0.0
      with:
        android-manifest-path: ./DeveBlockStacker.Android/Properties/AndroidManifest.xml
        version-name: 1.0.${{needs.generate_version_number.outputs.build_number}}
        version-code: ${{needs.generate_version_number.outputs.build_number}}
        print-file: true
    - name: Restore NuGet packages
      run: |
        nuget restore DeveBlockStacker.Core/DeveBlockStacker.Core.csproj
        nuget restore DeveBlockStacker.Android/DeveBlockStacker.Android.csproj
        nuget restore DeveBlockStacker.iOS/DeveBlockStacker.iOS.csproj
    - name: Build Android
      run: |
        #dotnet build DeveBlockStacker.Android/DeveBlockStacker.Android.csproj -c Release --no-restore /p:Version=1.0.${{needs.generate_version_number.outputs.build_number}}
        msbuild /p:Version=1.0.${{needs.generate_version_number.outputs.build_number}} /t:SignAndroidPackage /p:Configuration=Release /p:AndroidPackageFormat=aab /p:AndroidKeyStore=true /p:AndroidSigningKeyAlias=DevedseCert /p:AndroidSigningKeyPass=${{secrets.ANDROIDKEYSTOREPASSWORD}} /p:AndroidSigningKeyStore=DevedseCert.keystore /p:AndroidSigningStorePass=${{secrets.ANDROIDKEYSTOREPASSWORD}} DeveBlockStacker.Android\DeveBlockStacker.Android.csproj
    - name: dotnet test
      run: dotnet test DeveBlockStacker.Core.Tests/DeveBlockStacker.Core.Tests.csproj -c Release --verbosity normal
    # - name: Package sources
    #   run: |
    #     7z a -t7z -m0=LZMA2 -mmt=on -mx9 -md=1536m -mfb=273 -ms=on -mqs=on -sccUTF-8 "./Scripts/Output/DeveBlockStacker.Android.7z" "DeveBlockStacker.Android\*" '-x!*.pdb'
    #   shell: powershell
    - uses: actions/upload-artifact@v2
      with:
        name: DeveBlockStacker_build_windows_Android_aab
        path: ./DeveBlockStacker.Android/bin/AnyCPU/Release/deveblockstacker_android.deveblockstacker_android-Signed.aab

  build_macos_Android:
    needs: generate_version_number
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: |
          3.1.x
          6.0.x
    - name: Set Android version
      uses: damienaicheh/update-android-version-manifest-action@v1.0.0
      with:
        android-manifest-path: ./DeveBlockStacker.Android/Properties/AndroidManifest.xml
        version-name: 1.0.${{needs.generate_version_number.outputs.build_number}}
        version-code: ${{needs.generate_version_number.outputs.build_number}}
        print-file: true
    - name: Restore NuGet packages
      run: |
        nuget restore DeveBlockStacker.Core/DeveBlockStacker.Core.csproj
        nuget restore DeveBlockStacker.Android/DeveBlockStacker.Android.csproj
        nuget restore DeveBlockStacker.iOS/DeveBlockStacker.iOS.csproj      
    - name: Build Android
      run: MSBuild /p:Version=1.0.${{needs.generate_version_number.outputs.build_number}} /t:SignAndroidPackage /p:Configuration=Release /p:AndroidPackageFormat=aab /p:AndroidKeyStore=true /p:AndroidSigningKeyAlias=DevedseCert /p:AndroidSigningKeyPass=${{ secrets.ANDROIDKEYSTOREPASSWORD }} /p:AndroidSigningKeyStore=DevedseCert.keystore /p:AndroidSigningStorePass=${{ secrets.ANDROIDKEYSTOREPASSWORD }} ./DeveBlockStacker.Android/DeveBlockStacker.Android.csproj
    - name: dotnet test
      run: dotnet test DeveBlockStacker.Core.Tests/DeveBlockStacker.Core.Tests.csproj -c Release --verbosity normal
    - uses: actions/upload-artifact@v2
      with:
        name: DeveBlockStacker_build_macos_Android_aab
        path: ./DeveBlockStacker.Android/bin/AnyCPU/Release/deveblockstacker_android.deveblockstacker_android-Signed.aab
  
  build_windows_AndroidForFireStick:
    needs: generate_version_number
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: |
          3.1.x
          6.0.x
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1
    - name: Set Android version
      uses: damienaicheh/update-android-version-manifest-action@v1.0.0
      with:
        android-manifest-path: ./DeveBlockStacker.Android/Properties/AndroidManifest.xml
        version-name: 1.0.${{needs.generate_version_number.outputs.build_number}}
        version-code: ${{needs.generate_version_number.outputs.build_number}}
        print-file: true
    - name: Restore NuGet packages
      run: |
        nuget restore DeveBlockStacker.Core/DeveBlockStacker.Core.csproj
        nuget restore DeveBlockStacker.Android/DeveBlockStacker.Android.csproj
        nuget restore DeveBlockStacker.iOS/DeveBlockStacker.iOS.csproj
    - name: Build Android
      run: |
        #dotnet build DeveBlockStacker.Android/DeveBlockStacker.Android.csproj -c Release --no-restore /p:Version=1.0.${{needs.generate_version_number.outputs.build_number}}
        msbuild /p:Version=1.0.${{needs.generate_version_number.outputs.build_number}} /t:SignAndroidPackage /p:Configuration=Release /p:AndroidPackageFormat=apk /p:AndroidKeyStore=true /p:AndroidSigningKeyAlias=DevedseCert /p:AndroidSigningKeyPass=${{secrets.ANDROIDKEYSTOREPASSWORD}} /p:AndroidSigningKeyStore=DevedseCert.keystore /p:AndroidSigningStorePass=${{secrets.ANDROIDKEYSTOREPASSWORD}} DeveBlockStacker.Android\DeveBlockStacker.Android.csproj
    - name: dotnet test
      run: dotnet test DeveBlockStacker.Core.Tests/DeveBlockStacker.Core.Tests.csproj -c Release --verbosity normal
    # - name: Package sources
    #   run: |
    #     7z a -t7z -m0=LZMA2 -mmt=on -mx9 -md=1536m -mfb=273 -ms=on -mqs=on -sccUTF-8 "./Scripts/Output/DeveBlockStacker.Android.7z" "DeveBlockStacker.Android\*" '-x!*.pdb'
    #   shell: powershell
    - uses: actions/upload-artifact@v2
      with:
        name: DeveBlockStacker_build_windows_AndroidForFireStick_apk
        path: ./DeveBlockStacker.Android/bin/AnyCPU/Release/deveblockstacker_android.deveblockstacker_android-Signed.apk

  build_windows_WindowsUWP:
    needs: generate_version_number
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: |
          3.1.x
          6.0.x
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1
    - name: Set WindowsUWP version
      run: Scripts\UpdateAppxManifestVersion.ps1 -appxManifestPath ".\DeveBlockStacker.WindowsUWP\Package.appxmanifest" -version 1.0.${{needs.generate_version_number.outputs.build_number}}
      shell: powershell
    - name: Restore NuGet packages
      run: |
        nuget restore DeveBlockStacker.Core/DeveBlockStacker.Core.csproj
        nuget restore DeveBlockStacker.WindowsUWP/DeveBlockStacker.WindowsUWP.csproj
    - name: Build WindowsUWP
      run: |
        msbuild /p:Version=1.0.${{needs.generate_version_number.outputs.build_number}} "/p:Configuration=Release" /p:Platform="x86" /p:AppxBundlePlatforms="x86|x64|ARM" /p:AppxBundle=Always /p:UapAppxPackageBuildMode=StoreUpload "DeveBlockStacker.WindowsUWP\DeveBlockStacker.WindowsUWP.csproj"
    - name: dotnet test
      run: dotnet test DeveBlockStacker.Core.Tests/DeveBlockStacker.Core.Tests.csproj -c Release --verbosity normal
    - name: Package sources
      run: |
        7z a -t7z -m0=LZMA2 -mmt=on -mx9 -md=512m -mfb=273 -ms=on -mqs=on -sccUTF-8 "./Scripts/Output/DeveBlockStacker.WindowsUWP.7z" "DeveBlockStacker.WindowsUWP\*" '-x!*.pdb'
      shell: powershell
    - uses: actions/upload-artifact@v2
      with:
        name: DeveBlockStacker_build_windows_WindowsUWP_StorePackageThing
        path: ./Scripts/Output/DeveBlockStacker.WindowsUWP.7z
    - uses: actions/upload-artifact@v2
      with:
        name: DeveBlockStacker_build_windows_WindowsUWP_msixbundle
        path: ./DeveBlockStacker.WindowsUWP/bin/WindowsUniversal/x86/Release/Upload/DeveBlockStacker.WindowsUWP_1.0.${{needs.generate_version_number.outputs.build_number}}.0/DeveBlockStacker.WindowsUWP_1.0.${{needs.generate_version_number.outputs.build_number}}.0_x86_x64_ARM.msixbundle

  release_linux_Android:
    needs: [generate_version_number, build_windows_Android]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        path: ./artifacts/DeveBlockStacker_build_windows_Android_aab/
        name: DeveBlockStacker_build_windows_Android_aab
    - name: Upload to Google Play
      uses: r0adkll/upload-google-play@v1.0.15
      with:
        serviceAccountJsonPlainText: ${{ secrets.ANDROIDGOOGLEPLAYSTORESERVICEACCOUNTJSON }}
        packageName: deveblockstacker_android.deveblockstacker_android
        releaseFiles: ./artifacts/DeveBlockStacker_build_windows_Android_aab/deveblockstacker_android.deveblockstacker_android-Signed.aab
        track: production
        status: completed
        #inAppUpdatePriority: 2
        #userFraction: 0.33
        #whatsNewDirectory: distribution/whatsnew
        #mappingFile: app/build/outputs/mapping/release/mapping.txt

  release_linux_Amazon:
    needs: [generate_version_number, build_windows_AndroidForFireStick]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
    - uses: actions/checkout@v2
    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        path: ./Scripts/apks/
        name: DeveBlockStacker_build_windows_AndroidForFireStick_apk
    - name: Debugging with tmate
      uses: mxschmitt/action-tmate@v3.11
    - name: SubmitToAmazonAppStore
      shell: pwsh
      run: |
        ./Scripts/SubmitToAmazonAppStore.ps1 `
          -clientid ${{ secrets.AMAZONSTORE_CLIENTID }} `
          -clientsecret ${{ secrets.AMAZONSTORE_CLIENTSECRET }} `
          -commitdescription "${{ github.event.head_commit.message }}" `
          -version 1.0.${{needs.generate_version_number.outputs.build_number}}.0

  release_linux_MicrosoftStore:
    needs: [generate_version_number, build_windows_WindowsUWP]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        path: ./artifacts/DeveBlockStacker_build_windows_WindowsUWP_msixbundle/
        name: DeveBlockStacker_build_windows_WindowsUWP_msixbundle
    - name: List all files recursively
      run: |
        find
    - name: Windows Store Publish
      uses: isaacrlevin/windows-store-action@1.0
      with:
        tenant-id: ${{ secrets.AZURE_AD_TENANT_ID }}
        client-id: ${{ secrets.AZURE_AD_APPLICATION_CLIENT_ID }}
        client-secret: ${{ secrets.AZURE_AD_APPLICATION_SECRET }}
        app-id: DeveBlockStacker #${{ secrets.STORE_APP_ID }}
        package-path: "./artifacts/DeveBlockStacker_build_windows_WindowsUWP_msixbundle/"